@{
    var postView = ViewBag.PostView as BlogProject.ViewModel.PostViewModel;
    var post = postView.Post;
    var comments = ViewBag.Comments as List<BlogProject.Models.Comment>;
}

<div class="card">

    <div class="card-header d-flex justify-content-between">
        <span>@Html.DisplayFor(modelItem => post.User.UserName)</span>
        <span>@post.CreatedAt.ToString("MM/dd/yyyy")</span>
    </div>
    <div class="card-body">
        <h5 class="card-title">@post.Titre</h5>
        <p class="card-text">@post.Body</p>
    </div>
    <div class="card-footer d-flex justify-content-between">
        <div class="btn-group w-50">
            <button id="up-arrow-@post.Id" class="btn btn-light @(postView.CurrentUserVote == 1 ? "selected" : "")" onclick="increaseScore(@post.Id)">
                <i class="fas fa-arrow-up"></i>
            </button>
            <span id="score-@post.Id" class="btn btn-light disabled">
                @Html.DisplayFor(modelItem => post.Score)
            </span>
            <button id="down-arrow-@post.Id" class="btn btn-light @(postView.CurrentUserVote == -1 ? "selected" : "")" onclick="decreaseScore(@post.Id)">
                <i class="fas fa-arrow-down"></i>
            </button>
        </div>
        <a class="btn btn-secondary w-50" asp-action="PostDetails" asp-route-id="@post.Id">
            Comments
        </a>
    </div>
    <!-- Comments Section -->
    <div class="card-footer">
        @foreach (var comment in comments)
        {
            <div class="comment mb-2 d-flex justify-content-between align-items-center">
                <div>
                    <div class="d-flex justify-content-between w-100">
                        <span>@Html.DisplayFor(modelItem => comment.User.UserName)</span>
                        <span class="comment-date text-muted">
                            @comment.CreatedAt.ToString("MM/dd/yyyy")
                        </span>
                    </div>
                    <div class="comment-body">
                        @comment.Body
                    </div>
                </div>


                <!-- Score and Arrows -->
                <div class="btn-group">
                    <button id="comment-up-arrow-@comment.Id" class="btn btn-light" onclick="increaseScoreComm(@comment.Id)">
                        <i class="fas fa-arrow-up"></i>
                    </button>
                    <span id="comment-score-@comment.Id" class="btn btn-light disabled">
                        @Html.DisplayFor(modelItem => comment.Score)
                    </span>
                    <button id="comment-down-arrow-@comment.Id" class="btn btn-light" onclick="decreaseScoreComm(@comment.Id)">
                        <i class="fas fa-arrow-down"></i>
                    </button>
                </div>
            </div>
        }
    </div>

    <!-- Comment Input Box -->
    <div class="card-footer">
        <form asp-controller="Comment" asp-action="Create" asp-route-postId="@post.Id" method="post">
            <div class="input-group">
                <input type="text" name="comment" class="form-control" placeholder="Leave a comment...">
                <div class="input-group-append">
                    <button class="btn btn-outline-secondary" type="submit">Comment</button>
                </div>
            </div>
        </form>
    </div>

</div>


<script>
    function updateScore(postId, change) {
        $.ajax({
            url: '/Post/UpdateScore',
            type: 'POST',
            data: {
                'postId': postId,
                'change': change
            },
            success: function (response) {
                $('#score-' + postId).text(response.newScore);
                adjustArrowState(postId, response.newVote, change);
            }
        });
    }

    function adjustArrowState(postId, newVote, change) {
        $('#up-arrow-' + postId).removeClass('selected');
        $('#down-arrow-' + postId).removeClass('selected');

        if (newVote == 1) {
            $('#up-arrow-' + postId).addClass('selected');
        } else if (newVote == -1) {
            $('#down-arrow-' + postId).addClass('selected');
        }
    }

    function increaseScore(postId) {
        updateScore(postId, 1);
    }

    function decreaseScore(postId) {
        updateScore(postId, -1);
    }


    function updateCommentScore(commentId, change) {
        $.ajax({
            url: '/Comment/UpdateScore',
            type: 'POST',
            data: {
                'commentId': commentId,
                'change': change
            },
            success: function (response) {
                $('#comment-score-' + commentId).text(response.newScore);
                adjustCommentArrowState(commentId, response.newVote, change);
            }
        })
    }

    function adjustCommentArrowState(commentId, newVote, change) {
        $('#comment-up-arrow-' + commentId).removeClass('selected');
        $('#comment-down-arrow-' + commentId).removeClass('selected');

        if (newVote == 1) {
            $('#comment-up-arrow-' + commentId).addClass('selected');
        } else if (newVote == -1) {
            $('#comment-down-arrow-' + commentId).addClass('selected');
        }
    }

    function increaseScoreComm(commentId) {
        updateCommentScore(commentId, 1);
    }

    function decreaseScoreComm(commentId) {
        updateCommentScore(commentId, -1);
    }

</script>

<style>
    .selected {
        background-color: #007BFF;
        color: white;
    }
</style>